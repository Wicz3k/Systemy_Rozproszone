// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/names.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Streaming {

  /// <summary>Holder for reflection information generated from protos/names.proto</summary>
  public static partial class NamesReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/names.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NamesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJwcm90b3MvbmFtZXMucHJvdG8SCXN0cmVhbWluZyIrCgRUYXNrEiMKB2No",
            "YW5uZWwYASABKA4yEi5zdHJlYW1pbmcuQ2hhbm5lbCJ1CgtOYW1lTWVzc2Fn",
            "ZRIjCgdjaGFubmVsGAEgASgOMhIuc3RyZWFtaW5nLkNoYW5uZWwSEwoLdGVt",
            "cGVyYXR1cmUYAiABKAISFwoPbnVtYmVyT2ZQZW9wbGVzGAMgASgFEhMKC0lu",
            "Zm9ybWF0aW9uGAQgAygJKjYKB0NoYW5uZWwSBwoDQ0gwEAASBwoDQ0gxEAES",
            "BwoDQ0gyEAISBwoDQ0gzEAMSBwoDQ0g0EAQySwoKTmFtZVN0cmVhbRI9ChBz",
            "dWJzY3JpYmVDaGFubmVsEg8uc3RyZWFtaW5nLlRhc2saFi5zdHJlYW1pbmcu",
            "TmFtZU1lc3NhZ2UwAUIfCgtzci5ncnBjLmdlbkIOU3RyZWFtaW5nTmFtZXNQ",
            "AWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Streaming.Channel), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Streaming.Task), global::Streaming.Task.Parser, new[]{ "Channel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Streaming.NameMessage), global::Streaming.NameMessage.Parser, new[]{ "Channel", "Temperature", "NumberOfPeoples", "Information" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Channel {
    [pbr::OriginalName("CH0")] Ch0 = 0,
    [pbr::OriginalName("CH1")] Ch1 = 1,
    [pbr::OriginalName("CH2")] Ch2 = 2,
    [pbr::OriginalName("CH3")] Ch3 = 3,
    [pbr::OriginalName("CH4")] Ch4 = 4,
  }

  #endregion

  #region Messages
  public sealed partial class Task : pb::IMessage<Task> {
    private static readonly pb::MessageParser<Task> _parser = new pb::MessageParser<Task>(() => new Task());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Task> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Streaming.NamesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Task() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Task(Task other) : this() {
      channel_ = other.channel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Task Clone() {
      return new Task(this);
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private global::Streaming.Channel channel_ = global::Streaming.Channel.Ch0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Streaming.Channel Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Task);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Task other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Channel != global::Streaming.Channel.Ch0) hash ^= Channel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel != global::Streaming.Channel.Ch0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Channel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Channel != global::Streaming.Channel.Ch0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Channel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Task other) {
      if (other == null) {
        return;
      }
      if (other.Channel != global::Streaming.Channel.Ch0) {
        Channel = other.Channel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Channel = (global::Streaming.Channel) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NameMessage : pb::IMessage<NameMessage> {
    private static readonly pb::MessageParser<NameMessage> _parser = new pb::MessageParser<NameMessage>(() => new NameMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NameMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Streaming.NamesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NameMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NameMessage(NameMessage other) : this() {
      channel_ = other.channel_;
      temperature_ = other.temperature_;
      numberOfPeoples_ = other.numberOfPeoples_;
      information_ = other.information_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NameMessage Clone() {
      return new NameMessage(this);
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private global::Streaming.Channel channel_ = global::Streaming.Channel.Ch0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Streaming.Channel Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    /// <summary>Field number for the "temperature" field.</summary>
    public const int TemperatureFieldNumber = 2;
    private float temperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Temperature {
      get { return temperature_; }
      set {
        temperature_ = value;
      }
    }

    /// <summary>Field number for the "numberOfPeoples" field.</summary>
    public const int NumberOfPeoplesFieldNumber = 3;
    private int numberOfPeoples_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumberOfPeoples {
      get { return numberOfPeoples_; }
      set {
        numberOfPeoples_ = value;
      }
    }

    /// <summary>Field number for the "Information" field.</summary>
    public const int InformationFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_information_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> information_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Information {
      get { return information_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NameMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NameMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Temperature, other.Temperature)) return false;
      if (NumberOfPeoples != other.NumberOfPeoples) return false;
      if(!information_.Equals(other.information_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Channel != global::Streaming.Channel.Ch0) hash ^= Channel.GetHashCode();
      if (Temperature != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Temperature);
      if (NumberOfPeoples != 0) hash ^= NumberOfPeoples.GetHashCode();
      hash ^= information_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel != global::Streaming.Channel.Ch0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Channel);
      }
      if (Temperature != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Temperature);
      }
      if (NumberOfPeoples != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NumberOfPeoples);
      }
      information_.WriteTo(output, _repeated_information_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Channel != global::Streaming.Channel.Ch0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Channel);
      }
      if (Temperature != 0F) {
        size += 1 + 4;
      }
      if (NumberOfPeoples != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberOfPeoples);
      }
      size += information_.CalculateSize(_repeated_information_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NameMessage other) {
      if (other == null) {
        return;
      }
      if (other.Channel != global::Streaming.Channel.Ch0) {
        Channel = other.Channel;
      }
      if (other.Temperature != 0F) {
        Temperature = other.Temperature;
      }
      if (other.NumberOfPeoples != 0) {
        NumberOfPeoples = other.NumberOfPeoples;
      }
      information_.Add(other.information_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Channel = (global::Streaming.Channel) input.ReadEnum();
            break;
          }
          case 21: {
            Temperature = input.ReadFloat();
            break;
          }
          case 24: {
            NumberOfPeoples = input.ReadInt32();
            break;
          }
          case 34: {
            information_.AddEntriesFrom(input, _repeated_information_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
